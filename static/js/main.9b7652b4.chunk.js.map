{"version":3,"sources":["components/Header.js","components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Header","_ref","todos","react_default","a","createElement","Box","sx","flexGrow","AppBar","position","Toolbar","Avatar","alt","src","variant","width","height","Typography","component","filter","todo","completed","length","TodoForm","addTodo","_useState","useState","id","task","price","_useState2","Object","slicedToArray","setTodo","className","onSubmit","e","preventDefault","trim","objectSpread2","uuid","TextField","label","type","name","value","onChange","target","Button","Todo","toggleComplete","removeTodo","ListItem","Checkbox","checked","onClick","Typography_Typography","style","textDecoration","IconButton","Delete_default","TodoList","title","List","map","components_Todo","key","App","setTodos","_useState3","_useState4","view","setview","_useState5","_useState6","viewForm","setViewForm","_useState7","_useState8","buttonText","setButtonText","_useState9","_useState10","buttonComplete","setButtonComplete","useEffect","storageTodos","JSON","parse","localStorage","getItem","setItem","stringify","components_Header","Button_Button","marginTop","borderRadius","components_TodoForm","concat","toConsumableArray","components_TodoList","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.9b7652b4.chunk.js","sourcesContent":["import React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Avatar from '@mui/material/Avatar';\n\n\nconst Header = ({todos}) => {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar position=\"static\">\n        <Toolbar>          \n        <Avatar alt=\"Remy Sharp\" src=\"/iekalogo.png\" variant=\"square\" sx={{ width: 160, height: 66 }} />\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            Shopping List\n          </Typography>\n            {(todos.filter(todo => todo.completed === false)).length} items remain to buy\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n}\n\nexport default  Header;","import { Button, TextField } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport {v1 as uuid} from \"uuid\";\n\nconst TodoForm =({ addTodo }) => {\n  const [todo, setTodo] = useState({\n    id: \"\",\n    task: \"\",\n    price: \"\",\n    completed: false,\n  });\n\n  const handleTaskInputChange=(e) => {\n    // e.target.value contains new input from onChange\n    // event for input elements\n    setTodo({ ...todo, task: e.target.value });\n  }\n\n  const handlePriceInputChange = (e)=> {\n    // e.target.value contains new input from onChange\n    // event for input elements\n    setTodo({ ...todo, price: e.target.value });\n  }\n\n\n  const handleSubmit=(e) => {\n    e.preventDefault(); // prevents browser refresh\n    // trim() gets rid of string whitespace\n    if (todo.task.trim()) {\n      addTodo({ ...todo, id: uuid() });\n      setTodo({ ...todo, task: \"\", price: \"\" });\n      \n    }\n  }\n\n  return (\n    <form className=\"todo-form\" onSubmit={handleSubmit}>\n      <TextField\n        label=\"Name\"\n        type=\"text\"\n        name=\"task\"\n        value={todo.task}\n        onChange={handleTaskInputChange}\n      />\n      <TextField\n        label=\"price\"\n        type=\"number\"\n        name=\"price\"\n        value={todo.price}\n        onChange={handlePriceInputChange}\n      />\n      <Button type=\"submit\">Add to the list</Button>\n    </form>\n  );\n}\n\nexport default TodoForm;","import { Checkbox, IconButton, ListItem, Typography } from \"@material-ui/core\";\nimport Delete from \"@mui/icons-material/Delete\";\nimport React from \"react\";\n\nconst Todo= ({ todo, toggleComplete, removeTodo })=> {\n  const handleCheckboxClick = () => {\n    toggleComplete(todo.id);\n  }\n\n  const handleRemoveClick = ()=> {\n    removeTodo(todo.id);\n  }\n  \n  return (\n    <ListItem >\n      <Checkbox checked={todo.completed} onClick={handleCheckboxClick} />\n      <Typography\n        variant=\"body1\"\n        style={{\n          textDecoration: todo.completed ? \"line-through\" : null\n        }}\n      >\n         {todo.task}:{todo.price} SEK        \n      </Typography>\n      <IconButton onClick={handleRemoveClick}>\n        <Delete/>\n      </IconButton>\n    </ListItem>\n  );\n}\nexport default Todo;","import { List } from \"@material-ui/core\";\nimport React from \"react\";\nimport Todo from \"./Todo\";\n\nfunction TodoList({ todos, removeTodo, toggleComplete, title }) {\n  return (\n    <div className=\"ourcenter\">\n    <h1>{title}</h1>\n    <List>\n      {todos.map(todo => (\n        <Todo\n          key={todo.id}\n          todo={todo}\n          removeTodo={removeTodo}\n          toggleComplete={toggleComplete}\n        />\n      ))}\n    </List>\n    </div>\n  );\n}\n\nexport default TodoList;","\nimport React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport TodoForm from \"./components/TodoForm\";\nimport TodoList from \"./components/TodoList\";\nimport Button from '@mui/material/Button';\n\n\nconst LOCAL_STORAGE_KEY = \"react-todo-list-todos\";\n\nconst App = () => {\n  const [todos, setTodos] = useState([]);\n  const [view, setview] = useState(false);\n  const [viewForm, setViewForm] = useState(false);\n  const [buttonText, setButtonText] = useState(\"View Form to Add Item\");\n  const [buttonComplete, setButtonComplete] = useState(\"Show\");\n\n  useEffect(() => {\n    // fires when app component mounts to the DOM\n    const storageTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY));\n    if (storageTodos) {\n      setTodos(storageTodos);\n    }\n  }, []);\n\n  useEffect(() => {\n    // fires when todos array gets updated\n    localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos));\n    \n  }, [todos]);\n\n  const addTodo =(todo) => {\n    // adds new todo to beginning of todos array\n    setTodos([todo, ...todos]);\n  }\n  const showHide = () => {\n    setview(!view);\n    !view ? setButtonComplete(\"Hide\") : setButtonComplete(\"Show\");\n    \n  }\n\n  const formShowHide = () => {\n    setViewForm(!viewForm);\n     !viewForm ? setButtonText(\"Hide Form\") : setButtonText(\"View Form to Add Item\");     \n  }\n\n  const toggleComplete =(id)=> {\n    setTodos(\n      todos.map(todo => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            completed: !todo.completed\n          };\n        }\n        return todo;\n      })\n    );\n  }\n\n  const removeTodo = (id) => {\n    setTodos(todos.filter(todo => todo.id !== id));\n  }\n\n  return (\n    <div className=\"App\">\n      <Header todos={todos}/>\n        \n      <Button style={{marginTop:\"40px\", borderRadius: \"20px\"}} variant=\"contained\" onClick={formShowHide} > {buttonText} </Button>      \n      {viewForm && <TodoForm addTodo={addTodo} />}\n\n\n      { todos.length > 0 ? (<TodoList\n        title = \" \"\n        todos={todos.filter(todo => todo.completed === false)}\n        removeTodo={removeTodo}\n        toggleComplete={toggleComplete}\n      />) : (<h1>Please Add Item</h1>)}\n\n\n     <Button style={{marginTop:\"40px\", borderRadius: \"20px\"}} variant=\"contained\" onClick={showHide}> {buttonComplete} Completed task </Button>\n\n     {view && (<TodoList\n        title = \" \"\n        todos={todos.filter(todo => todo.completed === true)}\n        removeTodo={removeTodo}\n        toggleComplete={toggleComplete}\n      />)}\n    </div>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}